df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
head(df2)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
## Load SAT Scores 2012
#excluding math, writing, reading as these values are irrevelant.
model1 <- lm(SATTotal~ .  - Math - Writing - Reading,data=train)
summary(model1)
test$pred1 <- predict(model1, type="response", test)
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
par(mfrow=c(1,2))
boxplot(test$SATTotal, data=test)
boxplot(test$pred1, data=test)
mean(test$SATTotal)
mean(test$pred1)
summary(model1)
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
## Load SAT Scores 2012
#excluding math, writing, reading as these values are irrevelant.
model1 <- lm(SATTotal~ .  - Math - Writing - Reading,data=train)
summary(model1)
library(e1071)
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(VIM)
library(stringr)
library(knitr)
## Load demographic data (set 1)
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub(".1","Perc",names)
demosnapshot <- setNames(demosnapshot, names)
#convert all columns to numeric
for (i in 4:38)
{
demosnapshot[,i] <- gsub("%", "", demosnapshot[,i])
demosnapshot[,i] <- as.numeric(as.character(demosnapshot[,i]))
}
#lapply(demosnapshot, class)
## Load SAT Scores 2012
SATonly = read.csv("2012_SAT_Results.csv", header = TRUE)
#lapply(SATonly, class)
## Add total SAT score column for linear regression
SATonly$Math <- as.numeric(as.character(SATonly$SAT.Math.Avg..Score))
SATonly$Writing <- as.numeric(as.character(SATonly$SAT.Writing.Avg..Score))
SATonly$Reading <- as.numeric(as.character(SATonly$SAT.Critical.Reading.Avg..Score))
SATonly$SATTotal <- SATonly$Math + SATonly$Writing + SATonly$Reading
SATonly <- SATonly[ , -which(names(SATonly) %in% c("SAT.Math.Avg..Score","SAT.Writing.Avg..Score","SAT.Critical.Reading.Avg..Score"))]
## The assumption is that 2012 corresponds to the school year 2012-13 in demosnapshot
SATonly$Year <- '2012-13'
## total test takers has s to signify no one
SATonly$Num.of.SAT.Test.Takers[
SATonly$Num.of.SAT.Test.Takers == "s"] <- "0"
SATonly[,3] <- as.numeric(as.character(SATonly[,3]))
df <- merge(demosnapshot,SATonly,by=c("DBN","Year"), all=T)
df <- df[ , -which(names(df) %in% c("SCHOOL.NAME"))]
df2012 <- merge(demosnapshot,SATonly,by=c("DBN","Year"))
df2012 %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()
options(scipen = 999)
missing_plot <- VIM::aggr(df2012,
numbers = T,
sortVars = T,
col = c("lightgreen", "darkred", "orange"),
labels=names(df2012),
ylab=c("Missing Value Counts"
, "Pattern"))
summary(missing_plot)
missing_plot$missings %>%
mutate(
pct_missing = Count / nrow(df2012)
) %>%
arrange(-pct_missing) %>%
filter(pct_missing > 0) %>%
kable(digits = 3, row.names = T, caption = "Variables Missing Values")
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
## Load SAT Scores 2012
#excluding math, writing, reading as these values are irrevelant.
model1 <- lm(SATTotal~ .  - Math - Writing - Reading, data=train)
summary(model1)
test$pred1 <- predict(model1, type="response", test)
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
par(mfrow=c(1,2))
boxplot(test$SATTotal, data=test)
boxplot(test$pred1, data=test)
model1 <- glm(SATTotal~ .  - Math - Writing - Reading,data=train, family=gaussian())
summary(model1)
rcorr(as.matrix(train))
library(corrplot)
rcorr(as.matrix(train))
corrplot(cor(train), method="square")
corrplot(cor(train), method="square")
View(df2)
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade-",names)
names <- sub(".1","Perc",names)
demosnapshot <- setNames(demosnapshot, names)
View(demosnapshot)
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade",names)
names <- sub("X..","",names)
names <- sub(".1","Perc",names)
names
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade",names)
names
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade",names)
names <- sub("X..","",names)
names
names <- sub("^.1","Perc",names)
names
names <- sub("*.1","Perc",names)
names
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade",names)
names <- sub("X..","",names)
#names <- sub("*.1","Perc",names)
demosnapshot <- setNames(demosnapshot, names)
names
#convert all columns to numeric
for (i in 4:38)
{
demosnapshot[,i] <- gsub("%", "", demosnapshot[,i])
demosnapshot[,i] <- as.numeric(as.character(demosnapshot[,i]))
}
#lapply(demosnapshot, class)
## Load SAT Scores 2012
SATonly = read.csv("2012_SAT_Results.csv", header = TRUE)
#lapply(SATonly, class)
## Add total SAT score column for linear regression
SATonly$Math <- as.numeric(as.character(SATonly$SAT.Math.Avg..Score))
SATonly$Writing <- as.numeric(as.character(SATonly$SAT.Writing.Avg..Score))
SATonly$Reading <- as.numeric(as.character(SATonly$SAT.Critical.Reading.Avg..Score))
SATonly$SATTotal <- SATonly$Math + SATonly$Writing + SATonly$Reading
SATonly <- SATonly[ , -which(names(SATonly) %in% c("SAT.Math.Avg..Score","SAT.Writing.Avg..Score","SAT.Critical.Reading.Avg..Score"))]
## The assumption is that 2012 corresponds to the school year 2012-13 in demosnapshot
SATonly$Year <- '2012-13'
## total test takers has s to signify no one
SATonly$Num.of.SAT.Test.Takers[
SATonly$Num.of.SAT.Test.Takers == "s"] <- "0"
SATonly[,3] <- as.numeric(as.character(SATonly[,3]))
df <- merge(demosnapshot,SATonly,by=c("DBN","Year"), all=T)
df <- df[ , -which(names(df) %in% c("SCHOOL.NAME"))]
demosnapshot %>% dplyr:: select(ends_with(".1"))
index(demosnapshot %>% dplyr:: select(ends_with(".1")))
colnames(demosnapshot %>% dplyr:: select(ends_with(".1")))
grep(demosnapshot %>% dplyr:: select(ends_with(".1")), colnames(demosnapshot))
which(demosnapshot %>% dplyr:: select(ends_with(".1")))
which(demosnapshot %>% dplyr:: select(ends_with(".1")))
demosnapshot %>% dplyr:: select(ends_with(".1"))
colnames(demosnapshot %>% dplyr:: select(ends_with(".1")))
which(names(demosnapshot)==colnames(demosnapshot %>% dplyr:: select(ends_with(".1"))))
which(names(demosnapshot)==colnames(demosnapshot %>% dplyr:: select(ends_with(".1"))))
names(demosnapshot)
which(names(demosnapshot)==colnames(demosnapshot %>% dplyr:: select(ends_with(".1"))))
grep("White", colnames(demosnapshot))
grep(colnames(demosnapshot %>% dplyr:: select(ends_with(".1"))), colnames(snapshot))
grep(colnames(demosnapshot %>% dplyr:: select(ends_with(".1"))), colnames(demosnapshot))
for (colnames(demosnapshot %>% dplyr:: select(ends_with(".1")))):
which(colnames(snapshot) %in% demosnapshot %>% dplyr:: select(ends_with(".1"))))
which(colnames(snapshot) %in% demosnapshot %>% dplyr:: select(ends_with(".1"))))
a <-demosnapshot %>% dplyr:: select(ends_with(".1")))
a <-demosnapshot %>% dplyr:: select(ends_with(".1"))
which(colnames(demosnapshot) %in% a)
a
colnames(a)
which(colnames(demosnapshot) %in% colnames(a))
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade",names)
names <- sub("X..","",names)
#names <- sub("*.1","Perc",names)
demosnapshot <- setNames(demosnapshot, names)
a <-demosnapshot %>% dplyr:: select(ends_with(".1"))
b <- which(colnames(demosnapshot) %in% colnames(a))
b
for (i in b)
{
demosnapshot[,i] <- gsub("%", "", demosnapshot[,i])
demosnapshot[,i] <- as.numeric(as.character(demosnapshot[,i]))
}
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade",names)
names <- sub("X..","",names)
#names <- sub("*.1","Perc",names)
demosnapshot <- setNames(demosnapshot, names)
a <-demosnapshot %>% dplyr:: select(ends_with(".1"))
b <- which(colnames(demosnapshot) %in% colnames(a))
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade",names)
names <- sub("X..","",names)
#names <- sub("*.1","Perc",names)
demosnapshot <- setNames(demosnapshot, names)
a <-demosnapshot %>% dplyr:: select(ends_with(".1"))
b <- which(colnames(demosnapshot) %in% colnames(a))
#convert all columns to numeric
for (i in b)
{
demosnapshot[,i] <- gsub("%", "", demosnapshot[,i])
demosnapshot[,i] <- as.numeric(as.character(demosnapshot[,i]))
}
lapply(demosnapshot, class)
SATonly = read.csv("2012_SAT_Results.csv", header = TRUE)
#lapply(SATonly, class)
## Add total SAT score column for linear regression
SATonly$Math <- as.numeric(as.character(SATonly$SAT.Math.Avg..Score))
SATonly$Writing <- as.numeric(as.character(SATonly$SAT.Writing.Avg..Score))
SATonly$Reading <- as.numeric(as.character(SATonly$SAT.Critical.Reading.Avg..Score))
SATonly$SATTotal <- SATonly$Math + SATonly$Writing + SATonly$Reading
SATonly <- SATonly[ , -which(names(SATonly) %in% c("SAT.Math.Avg..Score","SAT.Writing.Avg..Score","SAT.Critical.Reading.Avg..Score"))]
## The assumption is that 2012 corresponds to the school year 2012-13 in demosnapshot
SATonly$Year <- '2012-13'
## total test takers has s to signify no one
SATonly$Num.of.SAT.Test.Takers[
SATonly$Num.of.SAT.Test.Takers == "s"] <- "0"
SATonly[,3] <- as.numeric(as.character(SATonly[,3]))
df <- merge(demosnapshot,SATonly,by=c("DBN","Year"), all=T)
df <- df[ , -which(names(df) %in% c("SCHOOL.NAME"))]
View(df)
lapply(df, class)
demosnapshot = read.csv("2011_-_2016_Demographic_Snapshot.csv", header = TRUE)
names <- colnames(demosnapshot)
names <- sub("Grade.","Grade",names)
names <- sub("X..","",names)
#names <- sub("*.1","Perc",names)
demosnapshot <- setNames(demosnapshot, names)
a <-demosnapshot %>% dplyr:: select(ends_with(".1"))
b <- which(colnames(demosnapshot) %in% colnames(a))
#convert all columns to numeric
for (i in b)
{
demosnapshot[,i] <- gsub("%", "", demosnapshot[,i])
demosnapshot[,i] <- as.numeric(as.character(demosnapshot[,i]))
}
SATonly = read.csv("2012_SAT_Results.csv", header = TRUE)
SATonly$Math <- as.numeric(as.character(SATonly$SAT.Math.Avg..Score))
SATonly$Writing <- as.numeric(as.character(SATonly$SAT.Writing.Avg..Score))
SATonly$Reading <- as.numeric(as.character(SATonly$SAT.Critical.Reading.Avg..Score))
SATonly = read.csv("2012_SAT_Results.csv", header = TRUE)
View(SATonly)
SATonly$Math <- as.numeric(as.character(SATonly$SAT.Math.Avg..Score))
SATonly$Writing <- as.numeric(as.character(SATonly$SAT.Writing.Avg..Score))
SATonly$Reading <- as.numeric(as.character(SATonly$SAT.Critical.Reading.Avg..Score))
SATonly$SATTotal <- SATonly$Math + SATonly$Writing + SATonly$Reading
SATonly <- SATonly[ , -which(names(SATonly) %in% c("SAT.Math.Avg..Score","SAT.Writing.Avg..Score","SAT.Critical.Reading.Avg..Score"))]
## The assumption is that 2012 corresponds to the school year 2012-13 in demosnapshot
SATonly$Year <- '2012-13'
## total test takers has s to signify no one
SATonly$Num.of.SAT.Test.Takers[
SATonly$Num.of.SAT.Test.Takers == "s"] <- "0"
SATonly[,3] <- as.numeric(as.character(SATonly[,3]))
df <- merge(demosnapshot,SATonly,by=c("DBN","Year"), all=T)
df <- df[ , -which(names(df) %in% c("SCHOOL.NAME"))]
df2012 <- merge(demosnapshot,SATonly,by=c("DBN","Year"))
df2012 %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()
options(scipen = 999)
missing_plot <- VIM::aggr(df2012,
numbers = T,
sortVars = T,
col = c("lightgreen", "darkred", "orange"),
labels=names(df2012),
ylab=c("Missing Value Counts"
, "Pattern"))
summary(missing_plot)
missing_plot$missings %>%
mutate(
pct_missing = Count / nrow(df2012)
) %>%
arrange(-pct_missing) %>%
filter(pct_missing > 0) %>%
kable(digits = 3, row.names = T, caption = "Variables Missing Values")
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
##collinearility is found and will be removed.  All counts will be removed and instead percentages will be kep.
corrplot(cor(df2), method="square")
colnames(df2)
subset(df2, select = -c("Female", "Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty"))
subset(df2, select = -c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty"))
df2[, !c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty")]
df2[, !colnames(df2) %in% c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty")]
colnames(df2)
df2 <- df2[, !colnames(df2) %in% c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty")]
colnames(df2)
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
##collinearility is found and will be removed.  All counts will be removed and instead percentages will be kep.
corrplot(cor(df2), method="square")
df2 <- df2[, !colnames(df2) %in% c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty")]
df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
model1 <- lm(SATTotal~ .  - Math - Writing - Reading, data=train)
summary(model1)
test$pred1 <- predict(model1, type="response", test)
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
par(mfrow=c(1,2))
boxplot(test$SATTotal, data=test)
boxplot(test$pred1, data=test)
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
test$pred1
summary(model1)
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
##collinearility is found and will be removed.  All counts will be removed and instead percentages will be kep.
corrplot(cor(df2), method="square")
df2 <- df2[, !colnames(df2) %in% c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty","Grade4","Grade5","Grade12")]
df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
## Load SAT Scores 2012
#excluding math, writing, reading as these values are irrevelant.
model1 <- lm(SATTotal~ .  - Math - Writing - Reading, data=train)
summary(model1)
test$pred1 <- predict(model1, type="response", test)
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
View(test)
test$pred1 <- predict(model1, type="response", test)
test <- test[test$pred1 >= 0, ]
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
par(mfrow=c(1,2))
boxplot(test$SATTotal, data=test)
boxplot(test$pred1, data=test)
model1 <- glm(SATTotal~ .  - Math - Writing - Reading,data=train, family=gaussian())
summary(model1)
test$pred1 <- predict(model1, type="response", test)
test <- test[test$pred1 >= 0, ]
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
par(mfrow=c(1,2))
boxplot(test$SATTotal, data=test)
boxplot(test$pred1, data=test)
colnames(test)
model1 <- glm(Num.of.SAT.Test.Takers ~ .  - Math - Writing - Reading -SATTotal,data=train, family=poisson())
summary(model1)
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
##collinearility is found and will be removed.  All counts will be removed and instead percentages will be kep.
corrplot(cor(df2), method="square")
df2 <- df2[, !colnames(df2) %in% c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty","Grade4","Grade5","Grade12")]
df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
## Load SAT Scores 2012
#excluding math, writing, reading as these values are irrevelant.
model1 <- lm(SATTotal~ .  - Math - Writing - Reading, data=train)
model2 <- glm(SATTotal~ .  - Math - Writing - Reading,data=train, family=gaussian())
test$pred1 <- predict(model1, type="response", test)
test$pred2 <- predict(model2, type="response", test)
test <- test[test$pred1 >= 0, ]
model1 <- glm(Num.of.SAT.Test.Takers ~ .  - Math - Writing - Reading -SATTotal,data=train, family=poisson())
train
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
##collinearility is found and will be removed.  All counts will be removed and instead percentages will be kep.
corrplot(cor(df2), method="square")
df2 <- df2[, !colnames(df2) %in% c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty","Grade4","Grade5","GradePK","GradeK","Grade1","Grade2","Grade3","GGrade6","Grade7","Grade8")]
df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
model1 <- glm(Num.of.SAT.Test.Takers ~ .  - Math - Writing - Reading -SATTotal,data=train, family=poisson())
model1 <- lm(SATTotal~ .  - Math - Writing - Reading, data=train)
summary(model1)
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
##collinearility is found and will be removed.  All counts will be removed and instead percentages will be kep.
corrplot(cor(df2), method="square")
df2 <- df2[, !colnames(df2) %in% c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty","Grade4","Grade5","GradePK","GradeK","Grade1","Grade2","Grade3","Grade6","Grade7","Grade8")]
df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
model1 <- lm(SATTotal~ .  - Math - Writing - Reading, data=train)
summary(model1)
model1 <- glm(Num.of.SAT.Test.Takers ~ .  - Math - Writing - Reading -SATTotal,data=train, family=poisson())
model1 <- glm(SATTotal~ .  - Math - Writing - Reading,data=train, family=gaussian())
summary(model1)
describe(df)
summary(df)
summary(df) %>% kable() %>% kable_styling()
library(kable)
summary(df) %>% kable() %>% kable_styling()
summary(df) %>% kable()
df2012 <- merge(demosnapshot,SATonly,by=c("DBN","Year"))
df2012 %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()
df2012 %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()
summary(model1)
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
set.seed(68)
df2 <- df2012[ , -which(names(df2012) %in% c("School.Name","SCHOOL.NAME"))]
df2 <- select_if(df2, is.numeric)
##collinearility is found and will be removed.  All counts will be removed and instead percentages will be kep.
corrplot(cor(df2), method="square")
df2 <- df2[, !colnames(df2) %in% c("Female","Male","Asian","Black","Hispanic","Other","White","Students.with.Disabilities","English.Language.Learners","Poverty","Grade4","Grade5","GradePK","GradeK","Grade1","Grade2","Grade3","Grade6","Grade7","Grade8")]
df2$Num.of.SAT.Test.Takers[is.na(df2$Num.of.SAT.Test.Takers)] <- mean(df2$Num.of.SAT.Test.Takers, na.rm=TRUE)
df2$Math[is.na(df2$Math)] <- mean(df2$Math, na.rm=TRUE)
df2$Writing[is.na(df2$Writing)] <- mean(df2$Writing, na.rm=TRUE)
df2$Reading[is.na(df2$Reading)] <- mean(df2$Reading, na.rm=TRUE)
df2$SATTotal[is.na(df2$SATTotal)] <- mean(df2$SATTotal, na.rm=TRUE)
train<-sample_frac(df2, 0.7)
sid<-as.numeric(rownames(train)) # because rownames() returns character
test<-df2[-sid,]
model1 <- lm(SATTotal~ .  - Math - Writing - Reading, data=train)
test$pred1 <- predict(model1, type="response", test)
test <- test[test$pred1 >= 0, ]
par(mfrow=c(1,2))
hist(test$SATTotal)
hist(test$pred1)
par(mfrow=c(1,2))
boxplot(test$SATTotal, data=test)
boxplot(test$pred1, data=test)
